import java.awt.Color;

//Rob Camick https://tips4java.wordpress.com/2009/07/05/hsl-color/
public class HSLColor{
	private float[] hsl;
	private float alpha;

	public HSLColor(Color rgb){
		this.hsl = HSLColor.fromRGB( rgb );
		this.alpha = rgb.getAlpha() / 255.0f;
	}

	public float getAlpha(){ return this.alpha; }

	public Color getComplementary(){
		float hue = (this.hsl[0] + 180.0f) % 360.0f;
		return HSLColor.toRGB(hue, this.hsl[1], this.hsl[2]);
	}

	public static float[] fromRGB(Color color){
		float[] rgb = color.getRGBColorComponents( null );
		float r = rgb[0];
		float g = rgb[1];
		float b = rgb[2];
		float min = Math.min(r, Math.min(g, b));
		float max = Math.max(r, Math.max(g, b));
		float h = 0;
		if (max == min)    h = 0;
		else if (max == r) h = (60 * (g - b) / (max - min) + 360) % 360;
		else if (max == g) h = 60 * (b - r) / (max - min) + 120;
		else if (max == b) h = 60 * (r - g) / (max - min) + 240;
		float l = (max + min) / 2;
		float s = 0;
		if (max == min)    s = 0;
		else if (l <= .5f) s = (max - min) / (max + min);
		else			   s = (max - min) / (2 - max - min);
		return new float[] {h, s * 100, l * 100};
	}

	public static Color toRGB(float h, float s, float l){ return HSLColor.toRGB(h, s, l, 1.0f); }

	public static Color toRGB(float h, float s, float l, float alpha){
		h = h % 360.0f;
		h /= 360f;
		s /= 100f;
		l /= 100f;
		float q = 0;
		if (l < 0.5) q = l * (1 + s);
		else 		 q = l + s - s * l;
		float p = 2 * l - q;
		float r = Math.max(0, HSLColor.HueToRGB(p, q, h + 1.0f / 3.0f));
		float g = Math.max(0, HSLColor.HueToRGB(p, q, h));
		float b = Math.max(0, HSLColor.HueToRGB(p, q, h - 1.0f / 3.0f));
		r = Math.min(r, 1.0f);
		g = Math.min(g, 1.0f);
		b = Math.min(b, 1.0f);
		return new Color(r, g, b, alpha);
	}


	private static float HueToRGB(float p, float q, float h){
		if (h < 0) h += 1;
		if (h > 1 ) h -= 1;
		if (6 * h < 1) return p + (q - p) * 6 * h;
		if (2 * h < 1 ) return  q;
		if (3 * h < 2) return p + (q - p) * 6 * (2.0f / 3.0f - h);
		return p;
	}
}
